


#ifndef RtmPrefixHeader_pch
#define RtmPrefixHeader_pch

//#define Client *(fpnn::TCPClientPtr*)((void* (*)(id, SEL))[self methodForSelector:NSSelectorFromString(@"getPrivateClient")])(self, NSSelectorFromString(@"getPrivateClient"))
//#define Quest(quest) *(fpnn::FPQuestPtr*)((void* (*)(id, SEL))[quest methodForSelector:NSSelectorFromString(@"getQuest")])(quest, NSSelectorFromString(@"getQuest"))
//#define Listen *(FPNNCppConnectionListenPtr*)((void* (*)(id, SEL))[self methodForSelector:NSSelectorFromString(@"getPrivatelistenCall")])(self, NSSelectorFromString(@"getPrivatelistenCall"))
//
//#define ListenWithClient(client) *(FPNNCppConnectionListenPtr*)((void* (*)(id, SEL))[client methodForSelector:NSSelectorFromString(@"getPrivatelistenCall")])(client, NSSelectorFromString(@"getPrivatelistenCall"))

#define fpnnMainClient  ((FPNNTCPClient *)[self valueForKey:@"authClient"])

#define _successCallback(data)    if (successCallback) { successCallback(data);}
#define _failCallback(error)       if (failCallback) { failCallback(error);}

#define RTMClientSendQuestTimeout  (timeout <= 0 ? self.clientConfig.sendQuestTimeout : timeout)
#define RTMClientFileQuestTimeout (timeout <= 0 ? self.clientConfig.fileQuestTimeout : timeout)
#define RTMClientTranslateQuestTimeout (timeout <= 0 ? self.clientConfig.translateTimeout : timeout)


#define clientConnectStatueVerify  if (self.currentConnectStatus != RTMClientConnectStatusConnected) {FPNError * error = [FPNError errorWithEx:@"FPNN_EC_CORE_CONNECTION_CLOSED" code:20002];_failCallback(error); return;}

#define clientConnectStatueVerifySync if (self.currentConnectStatus != RTMClientConnectStatusConnected) {model.error = [FPNError errorWithEx:@"FPNN_EC_CORE_CONNECTION_CLOSED" code:20002];return model;}

#define handlerNetworkError  if (result == NO) {if (failCallback) {FPNError * error = [FPNError errorWithEx:@"FPNN_EC_CORE_INVALID_CONNECTION" code:20012];failCallback(error);}}

// need messageType >= 51 && messageType <= 127
#define messageTypeFilter(messageType)  if (messageType < 51 || messageType > 127) {FPNError * error = [FPNError errorWithEx:@"RTM_EC_INVALID_MTYPE" code:200005];_failCallback(error);return;}

#define messageTypeFilterSync(messageType) if (messageType < 51 || messageType > 127) {FPNError * error = [FPNError errorWithEx:@"RTM_EC_INVALID_MTYPE" code:200005];model.error = error;return model;}


#define messageTypeGetHistoryFilter for (NSNumber * messageType in mtypes) {if (messageType.intValue < 51 || messageType.intValue > 127) {FPNError * error = [FPNError errorWithEx:@"RTM_EC_INVALID_MTYPE" code:200005];_failCallback(error);return;}}

#define messageTypeGetHistoryFilterSync for (NSNumber * messageType in mtypes) {if (messageType.intValue < 51 || messageType.intValue > 127) {FPNError * error = [FPNError errorWithEx:@"RTM_EC_INVALID_MTYPE" code:200005];model.error = error;return model;}}


#define mid  Int64Number(  (long long)((long long* (*)(id, SEL))[self methodForSelector:NSSelectorFromString(@"_getMessageId")])(self, NSSelectorFromString(@"_getMessageId"))  )
#define Int64Number(num)   [NSNumber numberWithLongLong:num]
#define Int32Number(num)   [NSNumber numberWithInt:num]

#define RTMNullString(string) ([string isKindOfClass:[NSNull class]] || string == nil || [string length] < 1 ? YES : NO )

#define RtmFpnnErrorLog(log)  [RtmErrorLog exportErrorLog:log];

#ifndef rtmWeakify
    #if DEBUG
        #if __has_feature(objc_arc)
        #define rtmWeakify(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
        #else
        #define rtmWeakify(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
        #endif
    #else
        #if __has_feature(objc_arc)
        #define rtmWeakify(object) try{} @finally{} {} __weak __typeof__(object) weak##_##object = object;
        #else
        #define rtmWeakify(object) try{} @finally{} {} __block __typeof__(object) block##_##object = object;
        #endif
    #endif
#endif

#ifndef rtmStrongify
    #if DEBUG
        #if __has_feature(objc_arc)
        #define rtmStrongify(object) autoreleasepool{} __typeof__(object) object = weak##_##object;
        #else
        #define rtmStrongify(object) autoreleasepool{} __typeof__(object) object = block##_##object;
        #endif
    #else
        #if __has_feature(objc_arc)
        #define rtmStrongify(object) try{} @finally{} __typeof__(object) object = weak##_##object;
        #else
        #define rtmStrongify(object) try{} @finally{} __typeof__(object) object = block##_##object;
        #endif
    #endif
#endif

//NSLog(__VA_ARGS__)
#ifdef DEBUG

#define FPNSLog(...)

#else

#define FPNSLog(...) 

#endif

//#ifdef DEBUG //调试
//
//#define NSAllLog(FORMAT, ...) fprintf(stderr, "%s:%zd\t%s\n", [[[NSString stringWithUTF8String: __FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat: FORMAT, ## __VA_ARGS__] UTF8String]);
//
//#else // 发布
//
//#define NSLog(FORMAT, ...) nil
//
//#endif

#endif /* RtmPrefixHeader_pch */
